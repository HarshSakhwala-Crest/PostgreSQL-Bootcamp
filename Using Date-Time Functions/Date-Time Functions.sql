-- DATE/TIME DATA TYPES
-- SYSTEM STYLE FOR DATE
SHOW Datestyle;
"ISO, DMY"
(type, format)

SET Datestyle = 'ISO, DMY';

SHOW Datestyle;


-- STRING TO DATE CONVERSION
-- TO_DATE FUNCTION
SELECT TO_DATE('2020-01-01','YYYY-MM-DD');
"2020-01-01"

SELECT TO_DATE('20200101','YYYYMMDD');
"2020-01-01"


SELECT TO_DATE('01-01-2022','DD-MM-YYYY');
"2022-01-01"


SELECT TO_DATE('2021-01-01','DD-MM-YYYY');


SELECT TO_DATE('December 1, 2020','Month DD, YYYY');
"2020-12-01"

SELECT TO_DATE('Dec 5, 2018','Mon DD, YYYY');
"2020-12-01"

SELECT TO_DATE('31th MAY, 2024','DDth MONTH, YYYY');
"2024-05-31"


-- TO_TIMESTAMP FUNCTION
SELECT TO_TIMESTAMP('2020-01-01 10:30:20','YYYY-MM-DD HH:MI:SS');
"2020-01-01 10:30:20+05:30"

SELECT TO_TIMESTAMP('2020-01-01 10:30:20','YYYY-MM-DD HH:MI');
"2020-01-01 10:30:00+05:30"

SELECT TO_TIMESTAMP('2020-01-01 10:30:20','YYYY-MM-DD HH');
"2020-01-01 10:00:00+05:30"


SELECT TO_TIMESTAMP('2020-01-31 30:8:10','YYYY-MM-DD HH24:MI:SS');


SELECT TO_TIMESTAMP('23-01-2025 10:8','DD-MM-YYYY SS:MS');
"2025-01-23 00:00:10.8+05:30"

SELECT TO_TIMESTAMP('23-01-2025 10:004','DD-MM-YYYY SS:MS');
"2025-01-23 00:00:10.004+05:30"


-- FORMATTING DATES
-- TO_CHAR FUNCTION
SELECT CURRENT_TIMESTAMP;
"2025-01-23 16:50:23.252756+05:30"

SELECT CURRENT_TIMESTAMP,
TO_CHAR('2020-04-02 10:00:00'::TIMESTAMP, 'YYYY Month DD');
"2025-01-23 16:51:41.1859+05:30"	"2020 April     02"

SELECT TO_CHAR('2020-06-21 16:30:00'::TIMESTAMP, 'YYYY Month DD'),
TO_CHAR('2020-06-21 16:30:00'::TIMESTAMPTZ, 'YYYY Month DD');
"2020 June      21"		"2020 June      21"


SELECT TO_CHAR('2020-06-21 16:30:00'::TIMESTAMP, 'YYYY Month DD'),
TO_CHAR('2020-06-21 16:30:00'::TIMESTAMPTZ, 'YYYY Month DD'),
TO_CHAR('2020-06-21 16:30:00-6:00'::TIMESTAMPTZ, 'YYYY Month DD HH:MI:SS TZ');
"2020 June      21"		"2020 June      21"		"2020 June      22 04:00:00 IST"


SELECT TO_CHAR('2020-06-21 16:30:00'::TIMESTAMP, 'YYYY Month DD'),
TO_CHAR('2020-06-21 16:30:00'::TIMESTAMPTZ, 'YYYY Month DD'),
TO_CHAR('2020-06-21T16:30:00-6:00'::TIMESTAMPTZ, 'YYYY Month DD HH:MI:SS TZ'),
TO_CHAR('2020-06-21T16:30:00-6:00'::TIMESTAMPTZ, 'FMMonth DDth YYYY HH:MI:SS TZ');
"2020 June      21"		"2020 June      21"		"2020 June      22 04:00:00 IST"	"June 22nd 2020 04:00:00 IST"


SELECT movie_name, 
release_date,
TO_CHAR(release_date,'FMMonth DDth, YYYY') AS "Release Date"
FROM movies;


SELECT movie_name, 
release_date,
TO_CHAR(release_date,'FMMonth DDth, YYYY HH:MI:SS TZ') AS "Release Date"
FROM movies;


-- DATE CONSTRUCTION FUNCTIONS
-- MAKE_DATE FUNCTION
SELECT MAKE_DATE(2020, 01, 01);
"2020-01-01"


-- MAKE_TIME FUNCTION
SELECT MAKE_TIME(2, 3, 4.05);
"02:03:04.05"


--MAKE_TIMESTAMP FUNCTION
SELECT MAKE_TIMESTAMP(2020, 01, 01, 10, 20, 45);
"2020-01-01 10:20:45"


-- MAKE_INTERVAL FUNCTION
SELECT MAKE_INTERVAL(2020, 01, 01, 01, 10, 30, 45);
"2020 years 1 mon 8 days 10:30:45"

SELECT MAKE_INTERVAL(2020, 01, 01, 01, 10, 30, 45),
MAKE_INTERVAL(2020, 01, 01, 10, 10, 30, 45);
"2020 years 1 mon 8 days 10:30:45"		"2020 years 1 mon 17 days 10:30:45"


SELECT MAKE_INTERVAL(days => 10);
"10 days"

SELECT MAKE_INTERVAL(months => 10, days => 2, mins => 35);
"10 mons 2 days 00:35:00"

SELECT MAKE_INTERVAL(weeks => 3);
"21 days"


-- MAKE_TIMESTAMPTZ FUNCTION
SELECT MAKE_TIMESTAMPTZ(2020, 02, 15, 0, 35, 15.25);
"2020-02-15 10:35:15.25+05:30"


SELECT pg_typeof(MAKE_TIMESTAMPTZ(2020, 02, 15, 0, 35, 15.25));
"timestamp with time zone"


SELECT * FROM pg_timezone_names;


SELECT * FROM pg_timezone_abbrevs;


SELECT MAKE_TIMESTAMPTZ(2020, 02, 15, 0, 35, 15.25,'US/Alaska');
"2020-02-15 15:05:15.25+05:30"


-- DATE VALUE EXTRACTORS
-- EXTRACT FUNCTION
SELECT EXTRACT('DAY' FROM CURRENT_TIMESTAMP);
23

SELECT EXTRACT('DAY' FROM CURRENT_TIMESTAMP) AS "Day",
EXTRACT('MONTH' FROM CURRENT_TIMESTAMP) AS "Month",
EXTRACT('YEAR' FROM CURRENT_TIMESTAMP) AS "Year";
23	1	2025


SELECT EXTRACT('EPOCH' FROM CURRENT_TIMESTAMP);
1737652148.538069


SELECT EXTRACT('CENTURY' FROM INTERVAL '500 YEARS 2 MONTHS 11 DAYS');
5


-- MATH OPERATORS
SELECT DATE '20200101' + 10;
"2020-01-11"

SELECT '20200101'::DATE + 30;
"2020-01-31"


SELECT TIME '23:59:59' + INTERVAL '1 SECOND';
"00:00:00"

SELECT '23:59:59'::TIME + '1 SECOND'::INTERVAL;
"00:00:00"


SELECT CURRENT_TIMESTAMP + '01:01:01';
"2025-01-24 10:06:28.724366+05:30"


SELECT DATE '20200101' + TIME '10:25:10';
"2020-01-01 10:25:10"


SELECT '10:10:10' + TIME '10:25:10';
"20:35:20"


SELECT DATE '20200101' - INTERVAL '1 HOUR';
"2019-12-31 23:00:00"


SELECT INTERVAL '30 MINUTES' + INTERVAL '30 MINUTES';
"01:00:00"

SELECT INTERVAL '30 MINUTES' - INTERVAL '15 MINUTES';
"00:15:00"

SELECT INTERVAL '30 MINUTES' + INTERVAL '1 DAY';
"1 day 00:30:00"

SELECT INTERVAL '2:00' / 2;
"01:00:00"


-- OVERLAPS KEYWORD
SELECT (DATE '2020-01-01', DATE '2020-12-31') OVERLAPS (DATE '2020-10-12', DATE '2020-12-01');
true

SELECT (DATE '2020-01-01', INTERVAL '100 DAYS') OVERLAPS (DATE '2020-10-12', DATE '2020-12-01');
false


-- DATE/TIME FUNCTIONS
SELECT CURRENT_DATE;
"2025-01-24"

SELECT CURRENT_DATE, CURRENT_TIME;
"2025-01-24"		"09:25:03.202644+05:30"

SELECT CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP;
"2025-01-24"		"09:25:48.822984+05:30"		"2025-01-24 09:25:48.822984+05:30"

SELECT LOCALTIME;
"09:26:59.896859"

SELECT LOCALTIMESTAMP;
"2025-01-24 09:27:33.963054"


SELECT CURRENT_TIME, CURRENT_TIME(2), 
CURRENT_TIMESTAMP, CURRENT_TIMESTAMP(2),
LOCALTIME, LOCALTIME(3),
LOCALTIMESTAMP, LOCALTIMESTAMP(6);


-- POSTGRESQL DATE/TIME FUNCTIONS
SELECT NOW();
"2025-01-24 09:38:30.070461+05:30"

SELECT NOW(), TRANSACTION_TIMESTAMP();
"2025-01-24 09:39:09.951943+05:30"		"2025-01-24 09:39:09.951943+05:30"

SELECT STATEMENT_TIMESTAMP();
"2025-01-24 09:41:55.087166+05:30"

SELECT CLOCK_TIMESTAMP();
"2025-01-24 09:42:13.220541+05:30"


SELECT TIMEOFDAY();
"Fri Jan 24 09:46:29.751541 2025 IST"


-- AGE FUNCTION
SELECT AGE('2020-01-01','2019-10-01');
"3 mons"

SELECT AGE(TIMESTAMP '2019-10-01');
"5 years 3 mons 23 days"

SELECT AGE(CURRENT_DATE, TIMESTAMP '2020-01-01');
"5 years 23 days"

SELECT AGE('2010-01-01','2020-01-01')
"-10 years"


-- EPOCH 
SELECT AGE(TIMESTAMP '2020-12-20', TIMESTAMP '2020-10-20');
"2 mons"

SELECT EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-12-20') -
EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-10-20');
5270400.000000

SELECT (EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-12-20') -
EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-10-20'))
/ 60 / 60 / 24;
61.0000000000000000


SELECT 
(EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-12-20') - EXTRACT('EPOCH' FROM TIMESTAMPTZ '2020-10-20'))
/ 60 / 60 / 24,
TIMESTAMPTZ '2020-12-20' - TIMESTAMPTZ '2020-10-20',
AGE(TIMESTAMPTZ '2020-12-20', TIMESTAMPTZ '2020-10-20');
61.0000000000000000			"61 days"		"2 mons"


-- DATE, TIME, TIMESTAMP IN TABLES
CREATE TABLE times (
	times_id SERIAL PRIMARY KEY,
	start_date DATE,
	start_time TIME,
	start_timestamp TIMESTAMP
);

INSERT INTO times (start_date, start_time, start_timestamp)
VALUES
('epoch','allballs','infinity');

INSERT INTO times (start_date, start_time, start_timestamp)
VALUES
('epoch','allballs','-infinity');

INSERT INTO times (start_date, start_time, start_timestamp)
VALUES
(NOW(),'allballs','tomorrow');

SELECT * FROM times;

-- TIMEZONE
SHOW TIMEZONE;

SHOW TIME ZONE;


SET TIMEZONE = 'US/Alaska';

SET TIME ZONE 'America/New_York';


ALTER TABLE times
ADD COLUMN end_timestamp TIMESTAMP WITH TIME ZONE,
ADD COLUMN end_time TIME WITH TIME ZONE;

INSERT INTO times (end_timestamp, end_time)
VALUES
('2020-01-20 11:30:00 US/Pacific', '11:30:00+6'),
('2020-06-20 11:30:00 US/Pacific', '11:30:00+6');

SELECT * FROM times;

SET TIME ZONE 'US/Pacific';

SELECT * FROM times;


-- DATE_PART FUNCTION
SELECT DATE_PART('YEAR', TIMESTAMP '2017-01-01');
2017

SELECT DATE_PART('YEAR', TIMESTAMP '2017-01-01'),
DATE_PART('QUARTER', TIMESTAMP '2017-01-01'),
DATE_PART('MONTH', TIMESTAMP '2017-01-01'),
DATE_PART('DECADE', TIMESTAMP '2017-01-01'),
DATE_PART('CENTURY', TIMESTAMP '2017-01-01');
2017	1	1	201		21

SELECT DATE_PART('WEEK', TIMESTAMP '2017-01-01'),
DATE_PART('DOW', TIMESTAMP '2017-01-01'),
DATE_PART('DOY', TIMESTAMP '2017-01-01'),
DATE_PART('DAY', TIMESTAMP '2017-01-01'),
DATE_PART('HOUR', TIMESTAMP '2017-01-01 10:20:30'),
DATE_PART('MINUTE', TIMESTAMP '2017-01-01 10:20:30'),
DATE_PART('SECOND', TIMESTAMP '2017-01-01 10:20:20.45');
52		0		1		1		10		20		20.45


SELECT
movie_name,
release_date,
DATE_PART('WEEK', release_date) AS "Release Week",
DATE_PART('MONTH', release_date) AS "Release Month"
FROM movies
ORDER BY 4;


-- DATE_TRUNC FUNCTION
SELECT DATE_TRUNC('HOUR', TIMESTAMP '2020-10-01 05:15:45');
"2020-10-01 05:00:00"

SELECT DATE_TRUNC('HOUR', TIMESTAMP '2020-10-01 05:15:45'),
DATE_TRUNC('MINUTE', TIMESTAMP '2020-10-01 05:15:45'),
DATE_TRUNC('SECOND', TIMESTAMP '2020-10-01 05:15:45.35222');
"2020-10-01 05:00:00"		"2020-10-01 05:15:00"		"2020-10-01 05:15:45"


SELECT
DATE_TRUNC('MONTH', release_date) AS "Release Month",
COUNT(movie_name)
FROM movies
GROUP BY "Release Month"
ORDER BY 2 DESC;